import java.io.FileInputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelReader {

    public static void main(String[] args) {
        try (FileInputStream file = new FileInputStream("your_excel_file.xlsx");
             XSSFWorkbook workbook = new XSSFWorkbook(file)) {

            Map<String, String> column4DataMap = new HashMap<>();

            Iterator<Row> rowIterator = workbook.getSheetAt(0).iterator();

            // Skip the first two rows (header and empty row)
            rowIterator.next();
            rowIterator.next();

            // Process the rest of the rows
            while (rowIterator.hasNext()) {
                Row dataRow = rowIterator.next();

                // Get data from Column 4
                String column4Key = getCellValue(dataRow.getCell(3));
                String column4Value = getCellValue(dataRow.getCell(7)); // Assuming England is at index 7

                // Store data in key-value pair
                column4DataMap.put(column4Key, column4Value);
            }

            // Now column4DataMap contains key-value pairs for Column 4

            // Example: Printing the map
            System.out.println(column4DataMap);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Utility method to handle different cell types and return as string
    private static String getCellValue(Cell cell) {
        if (cell == null) {
            return "";
        } else if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC) {
            return String.valueOf((int) cell.getNumericCellValue()); // Assuming numeric values are integers
        } else {
            return cell.getStringCellValue();
        }
    }
}

import java.io.FileInputStream;
import java.io.IOException;
import java.util.HashMap;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelRead {
    HashMap<String, String> dataMap;

    public ExcelRead(String filePath, String sheetName) {
        try {
            readExcel(filePath, sheetName);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void readExcel(String filePath, String sheetName) throws IOException {
        FileInputStream file = new FileInputStream(filePath);
        XSSFWorkbook wb = new XSSFWorkbook(file);
        XSSFSheet sheet = wb.getSheet(sheetName);
        dataMap = new HashMap<String, String>();

        // Assuming the first row contains keys and the second row contains values
        Row keyRow = sheet.getRow(0);
        Row valueRow = sheet.getRow(1);

        if (keyRow != null && valueRow != null) {
            for (int col = 0; col < keyRow.getLastCellNum(); col++) {
                Cell keyCell = keyRow.getCell(col);
                Cell valueCell = valueRow.getCell(col);

                if (keyCell != null && valueCell != null) {
                    String key = getCellValue(keyCell);
                    String value = getCellValue(valueCell);

                    key = key.toLowerCase();
                    dataMap.put(key, value);
                }
            }
        }

        wb.close();
        file.close();
    }

    private static String getCellValue(Cell cell) {
        if (cell == null) {
            return null;
        }
        switch (cell.getCellType()) {
            case STRING:
                return cell.getStringCellValue();
            case NUMERIC:
                DataFormatter df = new DataFormatter();
                return df.formatCellValue(cell);
            default:
                return null;
        }
    }

    public String getValue(String key) {
        key = key.toLowerCase();
        return dataMap.get(key);
    }
}
